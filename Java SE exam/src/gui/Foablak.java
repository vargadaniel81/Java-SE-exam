/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.*;

/**
 *
 * Varga Dániel (email: vargadaniel81@gmail.com)
 */
public class Foablak extends javax.swing.JFrame {

    private Map<Integer, Kategoria> kategoriaMap;
    private List<Koltseg> koltsegek;
    private List<Kategoria> kategoriak;
    private IModel model;
    public static SimpleDateFormat sdf = new SimpleDateFormat("yyyy.MM.dd.");

    public Foablak() {
        initComponents();

        setLocationRelativeTo(null);

        String connURL = "jdbc:mysql://localhost:3306/nyilvantarto";
        String user = "root";
        String pass = "1234";

        try {
            Connection conn = DriverManager.getConnection(connURL, user, pass);
            model = new DBModel(conn);

            kategoriaMap = model.getKategoriaMap();
            kategoriak = model.getAllKategoria();
            koltsegek = model.getAllKoltseg();
            cbKategoria.setModel(new DefaultComboBoxModel(kategoriak.toArray()));

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex,
                    "Adatbázis hiba!", JOptionPane.ERROR_MESSAGE);
        }

        DefaultTableModel dtm = (DefaultTableModel) tblKoltseg.getModel();
        dtm.addTableModelListener(tblKoltseg);
        refreshTable();
    }

    private void refreshTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblKoltseg.getModel();
        dtm.getDataVector().clear();
        dtm.fireTableDataChanged();
        int osszeg = 0;
        int osszesen = 0;

        for (Koltseg k : koltsegek) {
            Vector sor = new Vector();

            Kategoria kategoria = kategoriaMap.get(k.getKategoriaId());
            if (kategoria != null) {
                sor.add(kategoria.getMegnevezes());
            } else {
                sor.add("Törölt megrendelő");
            }
            sor.add(k.getMegnevezes());
            sor.add(k.getDatum());
            sor.add(k.getOsszeg());

            dtm.addRow(sor);

            osszeg = k.getOsszeg();
            osszesen += osszeg;
        }

        jlbOsszesen.setText(Integer.toString(osszesen));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblKoltseg = new javax.swing.JTable();
        cbKategoria = new javax.swing.JComboBox();
        btnUj = new javax.swing.JButton();
        btnSzerkeszt = new javax.swing.JButton();
        btnTorol = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jlbOsszesen = new javax.swing.JLabel();
        btnOsszes = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        miKilepes = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        miKategoriak = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblKoltseg.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Kategoria", "Megnevezés", "Dátum", "Összeg"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblKoltseg);

        cbKategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbKategoriaActionPerformed(evt);
            }
        });

        btnUj.setText("Új");
        btnUj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUjActionPerformed(evt);
            }
        });

        btnSzerkeszt.setText("Szerkeszt");
        btnSzerkeszt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSzerkesztActionPerformed(evt);
            }
        });

        btnTorol.setText("Töröl");
        btnTorol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTorolActionPerformed(evt);
            }
        });

        jLabel1.setText("Összesen:");

        jlbOsszesen.setText("jLabel2");

        btnOsszes.setText("Összes");
        btnOsszes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOsszesActionPerformed(evt);
            }
        });

        jMenu1.setText("Fájl");

        miKilepes.setText("Kilépés");
        miKilepes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miKilepesActionPerformed(evt);
            }
        });
        jMenu1.add(miKilepes);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Adatok");

        miKategoriak.setText("Kategóriák");
        miKategoriak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miKategoriakActionPerformed(evt);
            }
        });
        jMenu2.add(miKategoriak);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbKategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnOsszes, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTorol)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnUj, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnSzerkeszt, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addComponent(jlbOsszesen)
                .addGap(201, 201, 201))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnSzerkeszt, btnTorol, btnUj});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbKategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOsszes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSzerkeszt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTorol)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jlbOsszesen))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUjActionPerformed
        KoltsegDialog kd = new KoltsegDialog(this, true, kategoriak, null);
        kd.setVisible(true);

        if (kd.isMentes()) {
            Koltseg koltseg = kd.getKoltsegek();

            try {
                model.addKoltseg(koltseg);

                Kategoria kategoria = (Kategoria) cbKategoria.getSelectedItem();
                if (kategoria != null) {
                    koltsegek = model.getAllKoltseg(kategoria);
                } else {
                    koltsegek = model.getAllKoltseg();
                }
                refreshTable();

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex,
                        "Adatbázis hiba!", JOptionPane.ERROR_MESSAGE);
            }
        }
     }//GEN-LAST:event_btnUjActionPerformed

    private void cbKategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbKategoriaActionPerformed
        Kategoria kivalasztott = (Kategoria) cbKategoria.getSelectedItem();

        if (kivalasztott != null) {

            try {
                koltsegek = model.getAllKoltseg(kivalasztott);

                refreshTable();

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex,
                        "Adatbázis hiba!", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_cbKategoriaActionPerformed

    private void btnOsszesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOsszesActionPerformed
        cbKategoria.setSelectedIndex(-1);

        try {
            koltsegek = model.getAllKoltseg();
            refreshTable();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex,
                    "Adatbázis hiba!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnOsszesActionPerformed

    private void btnSzerkesztActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSzerkesztActionPerformed

        if (tblKoltseg.getSelectedRow() >= 0) {

            int sor = tblKoltseg.getSelectedRow();

            KoltsegDialog kd = new KoltsegDialog(this, true, kategoriak, koltsegek.get(sor));
            kd.setVisible(true);

            if (kd.isMentes()) {
                Koltseg koltseg = kd.getKoltsegek();

                try {
                    model.addKoltseg(koltseg);

                    Kategoria kategoria = (Kategoria) cbKategoria.getSelectedItem();
                    if (kategoria != null) {
                        koltsegek = model.getAllKoltseg(kategoria);
                    } else {
                        koltsegek = model.getAllKoltseg();
                    }
                    refreshTable();

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, ex,
                            "Adatbázis hiba!", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnSzerkesztActionPerformed

    private void btnTorolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTorolActionPerformed
        int sor = tblKoltseg.getSelectedRow();
        if (sor >= 0) {

            Object[] options = {"Igen", "Nem"};

            int valasz = JOptionPane.showOptionDialog(this, "Biztosan törölni akarod?",
                    "Törlési megerősítés", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,
                    null, options, options[0]);

            if (valasz == JOptionPane.YES_OPTION) {
                Koltseg k = koltsegek.get(sor);
                try {
                    model.removeKoltseg(k);
                    koltsegek.remove(k);
                    refreshTable();

                    if (sor > 0) {
                        tblKoltseg.setRowSelectionInterval(sor - 1, sor - 1);
                    }

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, ex,
                            "Adatbázis hiba!", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnTorolActionPerformed

    private void miKilepesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miKilepesActionPerformed
        System.exit(0);
    }//GEN-LAST:event_miKilepesActionPerformed

    private void miKategoriakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miKategoriakActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_miKategoriakActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Foablak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Foablak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Foablak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Foablak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Foablak().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOsszes;
    private javax.swing.JButton btnSzerkeszt;
    private javax.swing.JButton btnTorol;
    private javax.swing.JButton btnUj;
    private javax.swing.JComboBox cbKategoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlbOsszesen;
    private javax.swing.JMenuItem miKategoriak;
    private javax.swing.JMenuItem miKilepes;
    private javax.swing.JTable tblKoltseg;
    // End of variables declaration//GEN-END:variables
}
